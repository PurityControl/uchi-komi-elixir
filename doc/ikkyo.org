#+TITLE: Dai-ikkyo (group 1) - Setting up the environment

* Resources
The best resource for getting started is at
[[http://elixir-lang.org/install.html][the elixir install page]]

* Dependencies

Elixir depends on Erlang.
Please see [[https://github.com/PurityControl/uchi-komi-erlang/blob/master/doc/ikkyo.org][Erlang installation instructions]].

* Operating Systems specific information

** Windows
Download the binary from the elixir install page
linked above.
Follow the usual install procedure.

It can also be installed with [[https://chocolatey.org][chocolatey]]

** MAC OSX
Use your preferred package manager, ports / brew, to install

~sudo port install elixir~

** *nix environments

*** Package manager

All major distributions and the BSD's have an elixir package.
BSD's tend to be more current but linux package distributions
can lag some way behind the current release.

*** Erlang Solutions

[[https://www.erlang-solutions.com/downloads/download-elixir][Erlang Solutions]]
have a binary or repository entry that you can use to get
the latest version of Elixir installed.

*** ubuntu example

#+BEGIN_SRC bash
wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb \
     && sudo dpkg -i erlang-solutions_1.0_all.deb
#+END_SRC

* Emacs

Emacs has a package called [[https://github.com/tonini/alchemist.el][alchemist]] designed for developing in Elixir.

The site has full instructions for its installation.



* Phoenix

Phoenix is a web development framework for Elixir

** Dependencies

Phoenix has the following dependencies

- [[https://github.com/PurityControl/uchi-komi-erlang/blob/master/doc/ikkyo.org][Erlang]]
- Elixir (see above)
- Postgresql
- [[https://nodejs.org/en/][NodeJS]] or node through [[https://github.com/creationix/nvm][NVM]]
  - for nvm ensure
    - correct shell file has the config: nvm uses ~/.bashrc by default but mac
      uses ~/.bash_login when opening a shell
    - set a default nodejs to launch whenever a shell is opened
      - ~nvm install 5.0~
      - ~nvm alias default 5.0~

** Installation 

Once all of the dependencies have been met

you will need to install Erlang (and Elixir's) package manager hex.

~mix local.hex~

then install phoenix

#+BEGIN_SRC bash
mix archive.install https://github.com/phoenixframework/phoenix/releases/download/v1.0.3/phoenix_new-1.0.3.ez
#+END_SRC

then create the new project

#+BEGIN_SRC bash
mix phoenix.new prj_name

cd prj_name
mix ecto.create  # create the database
mix phoenix.server  # or iex -S mix phoenix.server

#browse localhost:4000

#+END_SRC
